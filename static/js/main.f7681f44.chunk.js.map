{"version":3,"sources":["home.jsx","firebase.js","components/question.jsx","components/answerChoice.jsx","components/nextButton.jsx","components/gameStatistics.jsx","components/gameOverPopup.jsx","components/countDown.jsx","App.js","components/instructions.jsx","appRouter.jsx","serviceWorker.js","index.js","assets/triviaLogo.png","assets/Button-Play-icon.png"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","Container","src","logo","react_router_dom","to","Button","variant","start","Component","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","Question","Col","Card_default","Body","ques","AnswerChoice","isCorrectAnswer","clickStatus","chosenAnswer","answerOption","correctAnswer","isWrongAnswer","revealresult","xs","sm","es_Card","Fragment","onClick","handleClick","NextButton","Row_default","Button_default","onClickOfNext","text","disabled","GameStatistics","Row","currentQuestion","gamePoints","GameOverPopup","handleClose","setState","show","handleNew","_this2","setTimeout","console","log","points","array","Modal","centered","Header","Title","map","element","index","Footer","CountDown","tick","bind","assertThisInitialized","seconds","timer","setInterval","clearInterval","onFinish","ProgressBar","animated","now","label","concat","parameters","url","queryString","split","window","location","search","slice","obj","arr","i","length","paramName","paramValue","toLowerCase","match","key","replace","exec","push","getAllUrlParams","href","id","isDebug","isdebug","isTestUser","istestuser","App","getUserId","gameID","userId","token","userName","playerList","name","QTalkApp","getUserAuthToken","e","fetch","method","headers","X-Auth-Id-Token","then","response","json","data","userDetails","displayName","catch","ref","once","snapshot","val","zeroIndex","indexOf","isInitialiser","getQuestions","update","initialiser","playerPoints","results","gameLib","gameBegin","error","loading","set","res","apiData","gamelib","gameStatus","getState","list","wrongchoices","incorrect_answers","rightchoice","correct_answer","multipleOptions","shuffleChoices","que","entities","decodeHTML","question","answer","choicesArray","wrongOptions","rightOption","choiceArray","sort","b","Math","random","handleOptionClick","chosenOption","target","textContent","choseCorrectAnswer","handleClickOfNext","resetGameBegin","setGameEnd","gameEnd","toString","substring","wrongAnswers","totalPoints","userLevel","document","pathname","gameTime","pointsTable","on","notifyGameRoundStarted","notifyGameRoundEnded","entries","abc","popup","_this3","stat","components_gameOverPopup","countDown","gameStatistics","answerChoice","prophistory","history","nextButton","Instructions","AppRouter","react_router","path","exact","component","home","Boolean","hostname","ReactDOM","render","appRouter","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f7681f44.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Container, Row, Button } from \"react-bootstrap\";\nimport logo from \"./assets/triviaLogo.png\";\nimport start from \"./assets/Button-Play-icon.png\";\nimport \"./App.css\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Container className=\"noPadding\">\n          <img src={logo} className=\"logo\" />\n\n          <div>\n            <Link to=\"/game/\">\n              <Button variant=\"outline-light\">\n                <img src={start} className=\"start\" />\n                <span className=\"text\"> START</span>\n              </Button>\n            </Link>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// import firebase from \"firebase\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwtQofl2d8GoBm6TU67q1ImaLqWH7Tevc\",\n  authDomain: \"qtrivia-1ebab.firebaseapp.com\",\n  databaseURL: \"https://qtrivia-1ebab.firebaseio.com\",\n  projectId: \"qtrivia-1ebab\",\n  storageBucket: \"qtrivia-1ebab.appspot.com\",\n  messagingSenderId: \"13126744922\",\n  appId: \"1:13126744922:web:993d64f1600b169c\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\nexport const database = firebase.database();\nexport const firebaseAuth = firebase.auth();\n","import React from \"react\";\nimport \"../App.css\";\nimport Card from \"react-bootstrap/Card\";\nimport { Col } from \"react-bootstrap\";\n\nconst Question = props => {\n  return (\n    <Col>\n      <Card className=\"quesCard\">\n        <Card.Body>\n          <pre>{props.ques}</pre>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nexport default Question;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Card, Col } from \"react-bootstrap\";\n\nclass AnswerChoice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  isCorrectAnswer = () => {\n    return (\n      this.props.clickStatus === \"on\" &&\n      this.props.chosenAnswer !== \"\" &&\n      this.props.answerOption === this.props.correctAnswer\n    );\n  };\n\n  isWrongAnswer = () => {\n    return (\n      this.props.clickStatus === \"on\" &&\n      this.props.revealresult === false &&\n      this.props.chosenAnswer === this.props.answerOption\n    );\n  };\n  render() {\n    if (this.isCorrectAnswer()) {\n      return (\n        <Col xs={12} sm={6} className=\"leftPull bottomPadding\">\n          <Card className=\"answerWrap bg-green \">\n            <Card.Body className=\"noPadding\">\n              {this.props.answerOption}\n            </Card.Body>\n          </Card>\n        </Col>\n      );\n    } else if (this.isWrongAnswer()) {\n      return (\n        <>\n          <Col xs={12} sm={6} className=\"leftPull bottomPadding\">\n            <Card className=\"answerWrap bg-red \">\n              <Card.Body className=\"noPadding\">\n                {this.props.answerOption}\n              </Card.Body>\n            </Card>\n          </Col>\n        </>\n      );\n    } else if (this.props.clickStatus === \"on\") {\n      return (\n        <Col xs={12} sm={6} className=\"leftPull bottomPadding\">\n          <Card className=\"answerWrap bg-lightBlue\">\n            <Card.Body className=\"noPadding\">\n              {this.props.answerOption}\n            </Card.Body>\n          </Card>\n        </Col>\n      );\n    } else {\n      return (\n        <Col xs={12} sm={6} className=\"leftPull bottomPadding\">\n          <Card\n            className=\"answerWrap bg-lightBlue\"\n            onClick={this.props.handleClick}\n          >\n            <Card.Body className=\"noPadding\">\n              {this.props.answerOption}\n            </Card.Body>\n          </Card>\n        </Col>\n      );\n    }\n  }\n}\n\nexport default AnswerChoice;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport \"../App.css\";\n\nconst NextButton = props => {\n  if (props.clickStatus === \"on\") {\n    return (\n      <Row className=\"navWrap\">\n        <Button variant=\"primary\" onClick={props.onClickOfNext}>\n          {props.text}\n        </Button>\n      </Row>\n    );\n  } else {\n    return (\n      <Row className=\"navWrap\">\n        <Button variant=\"primary\" onClick={props.onClickOfNext} disabled>\n          {props.text}\n        </Button>\n      </Row>\n    );\n  }\n};\n\nexport default NextButton;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"../App.css\";\n\nconst GameStatistics = props => {\n  return (\n    <Row className=\"statistics\">\n      <Col>\n        Que.No: <span className=\"gamePoints\">{props.currentQuestion}</span>\n      </Col>\n      <Col>\n        Points:<span className=\"gamePoints\">{props.gamePoints}</span>\n      </Col>\n    </Row>\n  );\n};\n\nexport default GameStatistics;\n","import React, { Component } from \"react\";\nimport { database } from \"../firebase\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"./gameOverPopup.css\";\n\nclass GameOverPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false\n    };\n  }\n  handleClose = () => {\n    this.setState({ show: false });\n  };\n\n  handleNew = () => {\n    this.handleClose();\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ show: true });\n    }, 2000);\n    console.log(this.props.points);\n  }\n\n  render() {\n    let array = this.props.points;\n\n    return (\n      <>\n        <Modal show={this.state.show} centered>\n          <Modal.Header>\n            <Modal.Title>Time up ..!! </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <h3>Scoreboard</h3>\n            {array.map((element, index) => (\n              <p className=\"scorerow\">\n                <span className=\"username\">{element[0]}</span>\n                <span className=\"userscore\">{element[1]}</span>\n              </p>\n            ))}\n          </Modal.Body>\n          <Modal.Footer>\n            <Link to=\"/\">\n              <Button variant=\"secondary\" onClick={this.handleNew}>\n                Home\n              </Button>\n            </Link>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default GameOverPopup;\n","import React, { Component } from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\n\nclass CountDown extends Component {\n  constructor(props) {\n    super(props);\n    this.tick = this.tick.bind(this);\n    this.state = { seconds: props.seconds };\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.tick, 1000);\n  }\n\n  tick() {\n    if (this.state.seconds > 0) {\n      this.setState({ seconds: this.state.seconds - 1 });\n    } else {\n      clearInterval(this.timer);\n      this.props.onFinish();\n    }\n  }\n  render() {\n    return (\n      <div>\n        {/* <p>{this.state.seconds}sec...</p> */}\n        <ProgressBar\n          animated\n          now={this.state.seconds * (5 / 3)}\n          label={`${this.state.seconds}sec`}\n        />\n      </div>\n    );\n  }\n}\nexport default CountDown;\n","import React, { Component } from \"react\";\nimport { database } from \"./firebase\";\nimport \"./App.css\";\nimport { Container, Row } from \"react-bootstrap\";\nimport Question from \"./components/question\";\nimport AnswerChoice from \"./components/answerChoice\";\nimport NextButton from \"./components/nextButton\";\nimport GameStatistics from \"./components/gameStatistics\";\nimport GameOverPopup from \"./components/gameOverPopup\";\n// import Timer from \"./components/timer\";\nimport CountDown from \"./components/countDown\";\nimport entities from \"entities\";\n\nfunction getAllUrlParams(url) {\n  var queryString = url ? url.split(\"?\")[1] : window.location.search.slice(1);\n  var obj = {};\n  if (queryString) {\n    queryString = queryString.split(\"#\")[0];\n    var arr = queryString.split(\"&\");\n    for (var i = 0; i < arr.length; i++) {\n      var a = arr[i].split(\"=\");\n      var paramName = a[0];\n      var paramValue = typeof a[1] === \"undefined\" ? true : a[1];\n      paramName = paramName.toLowerCase();\n      if (typeof paramValue === \"string\") paramValue = paramValue.toLowerCase();\n      if (paramName.match(/\\[(\\d+)?\\]$/)) {\n        var key = paramName.replace(/\\[(\\d+)?\\]/, \"\");\n        if (!obj[key]) obj[key] = [];\n        if (paramName.match(/\\[\\d+\\]$/)) {\n          var index = /\\[(\\d+)\\]/.exec(paramName)[1];\n          obj[key][index] = paramValue;\n        } else {\n          obj[key].push(paramValue);\n        }\n      } else {\n        if (!obj[paramName]) {\n          obj[paramName] = paramValue;\n        } else if (obj[paramName] && typeof obj[paramName] === \"string\") {\n          obj[paramName] = [obj[paramName]];\n          obj[paramName].push(paramValue);\n        } else {\n          obj[paramName].push(paramValue);\n        }\n      }\n    }\n  }\n  return obj;\n}\n\nlet parameters = getAllUrlParams(window.location.href);\nlet id = parameters.id ? parameters.id : \"\";\nlet isDebug =\n  parameters.isdebug === true ? true : parameters.isdebug === \"true\";\nlet isTestUser =\n  parameters.istestuser === true ? true : parameters.istestuser === \"true\";\n\nconsole.log(parameters);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: \"Loading...\",\n      answer: \"\",\n      wrongAnswers: [],\n      choicesArray: [0, 0, 0, 0],\n      chosenAnswer: \"\",\n      clickStatus: \"off\",\n      choseCorrectAnswer: false,\n      points: 0,\n      currentQuestion: 1,\n      userName: \"ddd\",\n      totalPoints: 0,\n      userLevel: \"\",\n      gameID: document.location.pathname\n        ? document.location.pathname.slice(1, 8) === \"QTrivia\"\n          ? id\n          : \"no_game_id\"\n        : \"no_location_pathname\",\n      userId: \"\",\n      isInitialiser: false,\n      gameTime: 30,\n      gameLib: {},\n      gameBegin: \"\",\n      gameEnd: null,\n      pointsTable: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUserId();\n    database\n      .ref(`rooms/${this.state.gameID}/gameStatus`)\n      .on(\"value\", snapshot => {\n        console.log(snapshot.val());\n        if (snapshot.val() === \"start\") {\n          try {\n            if (window.QTalkApp) {\n              window.QTalkApp.notifyGameRoundStarted();\n            }\n          } catch (e) {\n            console.log(\"Present Game started\");\n          }\n        } else if (snapshot.val() === \"end\") {\n          try {\n            if (window.QTalkApp) {\n              window.QTalkApp.notifyGameRoundEnded();\n            }\n          } catch (e) {\n            console.log(\"Present Game ended\");\n          }\n        }\n      });\n    database\n      .ref(`rooms/${this.state.gameID}/playerPoints/`)\n      .on(\"value\", snapshot => {\n        if (snapshot.val()) {\n          console.log(snapshot.val());\n          console.log(Object.entries(snapshot.val()));\n          let abc = Object.entries(snapshot.val());\n          this.setState({ pointsTable: abc });\n        }\n      });\n  }\n\n  getUserId = () => {\n    console.log(\"getUser Id functions\", this.state.gameID);\n\n    if (this.state.userId) {\n      console.log(\"[App.js] getUserId()\");\n      let token, userId, userName;\n      let playerList = {\n        id: [0, 0],\n        name: [\"\", \"\"]\n      };\n\n      try {\n        token = window.QTalkApp.getUserAuthToken();\n      } catch (e) {\n        // token = \"\";\n        token = \"cdc9b8e03a9e85e02a425983028b602ecdd7bdd5\";\n      }\n\n      let url = isDebug\n        ? \"https://staging.remote.qtalk.io/v1/verifyAuthIdToken\"\n        : \"https://remote.qtalk.io/v1/verifyAuthIdToken\";\n\n      if (isTestUser) {\n        url = url + \"?isTestUser=true\";\n      }\n\n      console.log(url);\n\n      if (token) {\n        fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"X-Auth-Id-Token\": token ? token : \"\"\n          }\n        })\n          .then(response => {\n            return response.json();\n          })\n          .then(data => {\n            console.log(data.userId);\n            userId = data.userId;\n            userName = data.userDetails.displayName;\n          })\n          .catch(e => {\n            console.log(e);\n          });\n        this.setState({\n          userId: userId ? userId : \"newid\",\n          userName: userName ? userName : \"newname\"\n        });\n      }\n\n      database\n        .ref(`rooms/${this.state.gameID}/players`)\n        .once(\"value\", snapshot => {\n          if (snapshot) {\n            console.log(snapshot);\n            console.log(snapshot.val());\n\n            playerList = snapshot.val();\n\n            if (!playerList) {\n              playerList = {\n                id: [],\n                name: []\n              };\n            }\n\n            try {\n              let zeroIndex = playerList.id.indexOf(0);\n              console.log(playerList.id);\n              console.log(playerList);\n              if (zeroIndex !== -1) {\n                playerList.id[zeroIndex] = userId ? userId : \"testid\";\n                playerList.name[zeroIndex] = userName ? userName : \"testUser\";\n              } else {\n                if (playerList.id.length === 0) {\n                  console.log(\"hoy\");\n                  this.setState({ isInitialiser: true });\n                  this.getQuestions();\n                  database.ref(`rooms/${this.state.gameID}/`).update({\n                    initialiser: userId ? userId : 999,\n                    playerPoints: \"\"\n                  });\n                } else {\n                  database\n                    .ref(`rooms/${this.state.gameID}/gamelib`)\n                    .once(\"value\", snapshot => {\n                      let array = snapshot.val().results;\n                      this.setState({ gameLib: array, gameBegin: \"true\" });\n                    });\n                }\n                playerList.id.push(userId ? userId : \"testid\");\n                playerList.name.push(userName ? userName : \"testUser\");\n              }\n            } catch (error) {\n              console.log(error);\n            }\n\n            this.setState({\n              userName: userName,\n              playerList: playerList,\n              loading: false\n            });\n\n            console.log(playerList);\n            database.ref(`rooms/${this.state.gameID}/players`).set(playerList);\n          }\n        });\n      console.log(\"token\", token);\n    }\n  };\n\n  getQuestions = () => {\n    console.log(this.state.isInitialiser, \"dhe ithu varunnundo entho\");\n    fetch(`https://opentdb.com/api.php?amount=30&difficulty=easy&type=multiple`)\n      .then(res => res.json())\n      .then(apiData => {\n        database.ref(`rooms/${this.state.gameID}`).update({\n          gamelib: apiData,\n          gameStatus: \"start\"\n        });\n        this.setState({ gameLib: apiData.results, gameBegin: \"true\" });\n      });\n  };\n\n  getState = () => {\n    console.log(\"inside getstate\");\n    console.log(this.state.gameLib);\n\n    let i = this.state.currentQuestion - 1;\n    let list = this.state.gameLib[i];\n    console.log(i);\n    let wrongchoices = list.incorrect_answers;\n    let rightchoice = list.correct_answer;\n    let multipleOptions = this.shuffleChoices(wrongchoices, rightchoice);\n    let que = entities.decodeHTML(list.question);\n    this.setState({\n      question: que,\n      answer: list.correct_answer,\n      choicesArray: multipleOptions\n    });\n  };\n\n  shuffleChoices = (wrongOptions, rightOption) => {\n    let choiceArray = wrongOptions.concat(rightOption);\n    choiceArray = choiceArray.sort((a, b) => {\n      return 0.5 - Math.random();\n    });\n\n    return choiceArray;\n  };\n\n  handleOptionClick = e => {\n    let chosenOption = e.target.textContent;\n\n    if (chosenOption === this.state.answer) {\n      this.setState({\n        clickStatus: \"on\",\n        choseCorrectAnswer: true,\n        chosenAnswer: chosenOption,\n        points: this.state.points + 20\n      });\n    } else {\n      this.setState({\n        clickStatus: \"on\",\n        choseCorrectAnswer: false,\n        chosenAnswer: chosenOption\n      });\n    }\n  };\n\n  handleClickOfNext = () => {\n    this.setState({\n      currentQuestion: this.state.currentQuestion + 1,\n      chosenAnswer: \"\",\n      clickStatus: \"off\",\n      choseCorrectAnswer: false\n    });\n    this.getState();\n  };\n\n  resetGameBegin = () => {\n    this.setState({ gameBegin: \"false\" });\n  };\n\n  setGameEnd = () => {\n    this.setState({ gameEnd: true });\n\n    let name = this.state.userName\n      ? this.state.userName\n      : Math.random()\n          .toString(36)\n          .substring(7);\n    database\n      .ref(`rooms/${this.state.gameID}/playerPoints/${name}`)\n      .set(this.state.points);\n  };\n\n  render() {\n    let stat = this.state.gameBegin;\n    let gameEnd = this.state.gameEnd;\n    let popup;\n    if (stat === \"true\" && this.state.gameLib !== null) {\n      this.getState();\n      this.resetGameBegin();\n    }\n    if (gameEnd) {\n      popup = <GameOverPopup points={this.state.pointsTable} />;\n    } else {\n      popup = \"\";\n    }\n    return (\n      <div className=\"App\">\n        <Container className=\"noPadding\">\n          <CountDown seconds={60} onFinish={this.setGameEnd} />\n          <GameStatistics\n            gamePoints={this.state.points}\n            currentQuestion={this.state.currentQuestion}\n          />\n          <Row>\n            <Question ques={this.state.question} />\n          </Row>\n          {this.state.choicesArray.map((element, index) => (\n            <AnswerChoice\n              key={index}\n              answerOption={element}\n              handleClick={this.handleOptionClick}\n              chosenAnswer={this.state.chosenAnswer}\n              revealresult={this.state.choseCorrectAnswer}\n              clickStatus={this.state.clickStatus}\n              correctAnswer={this.state.answer}\n              prophistory={this.props.history}\n              points={this.state.points}\n            />\n          ))}\n\n          <NextButton\n            text=\"Next\"\n            clickStatus={this.state.clickStatus}\n            onClickOfNext={this.handleClickOfNext}\n            choseCorrectAnswer={this.state.choseCorrectAnswer}\n          />\n          {popup}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"./instructions.css\";\n\nconst Instructions = () => {\n  return (\n    <>\n      <Container>\n        <div className=\"progCard \">\n          <Row>\n            <Col>\n              <h3>How to Play</h3>\n              <ul className=\"textAllignLeft\">\n                <li>\n                  You should choose the correct answer from the four multiple\n                  choices given.\n                </li>\n                <li>\n                  For each Correct answer, you get 20 points and can advance to\n                  next question by clicking on next button\n                </li>{\" \"}\n                <li>\n                  Earn Maximum points by answering as many questions you can in\n                  60 seconds..!! Make your moves fast !!\n                </li>\n                {/* <li>\n                  But once you choose wrong option at any stage , you lose the\n                  game and the points earned so far will be added to your total\n                  points earned.\n                </li>\n                <li>\n                  Initially you will be holding \"Beginner\" badge. Earn more\n                  points to Upgrade your Mastery Level\n                </li>\n                <li>\n                  0-500 points --> Beginner <br />\n                  501-1000 points --> Expert <br />\n                  1001-1500 points --> Genius <br />\n                  Above 1501 points --> Champion <br />\n                </li> */}\n              </ul>\n              <div>\n                <Link to=\"/\">\n                  <Button variant=\"danger\">Home</Button>\n                </Link>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Instructions;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport home from \"./home\";\n\nimport App from \"./App\";\nimport Instructions from \"./components/instructions\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={home} />\n        <Route path=\"/game/\" component={App} />\n        <Route path=\"/howToPlay/\" component={Instructions} />\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppRouter from \"./appRouter\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/triviaLogo.e7e84558.png\";","module.exports = __webpack_public_path__ + \"static/media/Button-Play-icon.6ea0c212.png\";"],"sourceRoot":""}